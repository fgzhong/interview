package keyword;

/**
 * @Author create by fgzhong
 * @Date 2018/9/17
 * @Description  volatile关键字 -- 引申 内存模型
 */
public class VolatileT {

    /**
     *   Q1: 内存模型的特点
     *   A1：1、可见性 -- 一个线程修改的状态对另一个线程是可见的
     *       2、原子性 -- 操作不可分割
     *       3、有序性 -- 线程操作有序
     *
     *   Q2：内存模型的概念
     *   A2：1、作用：屏蔽硬件和系统的内存访问差异，一致性
     *       2、定义程序中各个变量的访问规则，即变量（线程共享，实例字段、静态字段、集合；
     *          （线程私有）不包含局部变量与方法参数）
     *       3、所有变量都存储在主内存（Java堆）中，每条线程有自己的工作内存（Java栈）
     *       4、lock/unlock  read -- load -- use -- assign -- store -- write
     *       5、拷贝主内存中的变量，
     *
     *   Q2：volatile原理
     *   A2：1、将修改值立即写入主内存，并让其他线程缓存的变量失效，重新从主内存中读取
     *       2、内存栅栏 -- 禁止指令重排序：volatile变量前后操作不能换
     *
     *   Q3：happen-before原则
     *   A3：1、程序次序原则：按照代码顺序执行
     *       2、锁定原则：unlock发生在lock之前
     *       3、volatile：写操作发生于读操作之前
     *       4、传递原则：操作A先于B，B先于C，则A先于C
     *       5、线程启动、中断、终结；对象终结
     *
     *
     */
}
